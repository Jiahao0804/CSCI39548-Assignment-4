{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","placeholder","min","step","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","creditList","concat","elements","Date","toISOString","parseFloat","toFixed","console","log","debitList","a","fetch","then","response","json","total_credit","total_debit","forEach","total_account_balance","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67cf024a.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Credits = (props) => {\r\n  // Create the list of Debit items()\r\n  let creditsView = () => {\r\n    const { credits } = props;\r\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = credit.date.slice(0,10);\r\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\r\n    });\r\n  }\r\n  // Render the list of Credit items and a form to input new Credit item\r\n  return (\r\n    <div>\r\n      <h1>Credits</h1>\r\n\r\n      {creditsView()}\r\n\r\n      <form onSubmit={props.addCredit}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"Description\"/>\r\n        <input type=\"number\" name=\"amount\" placeholder=\"Amount\" min=\"0\" step=\"0.01\"/>\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n\r\n      <br/>\r\n\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br></br>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport {Link} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = () => {\r\n    const { debits } = props;\r\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0,10);\r\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\r\n    });\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n\r\n      {debitsView()}\r\n\r\n      <form onSubmit={props.addDebit}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"Description\"/>\r\n        <input type=\"number\" name=\"amount\" placeholder=\"Amount\" min=\"0\" step=\"0.01\"/>\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n\r\n      <br/>\r\n\r\n      <AccountBalance accountBalance={props.accountBalance}/>\r\n      <br></br>\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Debits;","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Jiahao Li',\r\n        memberSince: '08/04/2001',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // adding function addCredit and addDebit that update the state based on user input of new credits and debits\r\n  addCredit = (e) => {\r\n    e.preventDefault();\r\n    this.setState( { creditList: this.state.creditList.concat([{\r\n      description: e.target.elements.description.value,\r\n      amount: e.target.elements.amount.value,\r\n      date: new Date().toISOString().slice(0, 10),\r\n    }]) } );\r\n    \r\n    // Update the accountBalance\r\n    this.setState( { accountBalance: (parseFloat(this.state.accountBalance) + parseFloat(e.target.elements.amount.value)).toFixed(2)});\r\n\r\n    console.log(this.creditList);\r\n    console.log(this.accountBalance);\r\n  }\r\n\r\n  addDebit = (e) => {\r\n    e.preventDefault();\r\n    this.setState( { debitList: this.state.debitList.concat([{\r\n      description: e.target.elements.description.value,\r\n      amount: e.target.elements.amount.value,\r\n      date: new Date().toISOString().slice(0, 10),\r\n    }]) } );\r\n    \r\n    // Update the accountBalance\r\n    this.setState( { accountBalance: (parseFloat(this.state.accountBalance) - parseFloat(e.target.elements.amount.value)).toFixed(2)});\r\n    \r\n    console.log(this.debitList);\r\n    console.log(this.accountBalance);\r\n  }\r\n\r\n  // need to load data from endpoint\r\n  async componentDidMount() {\r\n    // fetch takes time, wait for this function been finish then run the next function\r\n    await fetch('https://johnnylaicode.github.io/api/credits.json')\r\n    .then((response) => response.json())\r\n    .then(credits => {\r\n      this.setState( { creditList: credits });\r\n    });\r\n\r\n    await fetch('https://johnnylaicode.github.io/api/debits.json')\r\n    .then((response) => response.json())\r\n    .then(debits => {\r\n      this.setState( { debitList: debits });\r\n    });\r\n\r\n    // reassign the creditList and debitLists from the endpoint\r\n    let credits = this.state.creditList;\r\n    let debits = this.state.debitList;\r\n\r\n    // initialize total_credit and total_debit to 0\r\n    let total_credit = 0;\r\n    let total_debit = 0;\r\n    \r\n    // update total_credit after amount been insert\r\n    credits.forEach((credit) => {\r\n      total_credit = total_credit + credit.amount;\r\n    })\r\n\r\n    // update total_debit after amount been insert\r\n    debits.forEach((debit) => {\r\n      total_debit = total_debit + debit.amount;\r\n    })\r\n\r\n    // update the total account balance by subtract total_credit and total_debit\r\n    let total_account_balance = (total_credit - total_debit).toFixed(2);\r\n    this.setState( { accountBalance: total_account_balance } );\r\n  }\r\n  /*\r\n  compoentDidMount() {\r\n    this.fetchCreditsData();\r\n    this.fetchDebitsData();\r\n  }\r\n\r\n  fetchCreditsData = () => {\r\n    fetch('https://johnnylaicode.github.io/api/credits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          creditList: [...prevState.creditList, ...data],\r\n          accountBalance: prevState.accountBalance + this.getTotalAmount(data),\r\n        }));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  fetchDebitsData = () => {\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          debitList: [...prevState.debitList, ...data],\r\n          accountBalance: prevState.accountBalance - this.getTotalAmount(data),\r\n        }));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  getTotalAmount = (data) => {\r\n    return data.reduce((total, item) => total + parseFloat(item.amount), 0);\r\n  };\r\n\r\n  }*/\r\n  \r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance}/>) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/CSCI39548-Assignment-4\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}